{"version":3,"sources":["../src/Location.jsx"],"names":[],"mappings":"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","file":"Location.js","sourcesContent":["'use strict';\n\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport Awesomplete from 'awesomplete';\nimport Promise from 'promise-polyfill';\nimport google from './vendor/google';\n\nconst NO_MATCHING = 'Unrecognised {{value}}, please check and re-enter.';\nconst DEFAULT_COUNTRY = 'US';\n\nvar compose = function () {\n  var fns = arguments;\n\n  return function (result) {\n    for (let i = fns.length - 1; i >= 0; i--) {\n      result = fns[i].call(this, result);\n    }\n    return result;\n  };\n};\n\nexport default class Location extends React.Component {\n\n  render() {\n    return (\n      <input\n        type='text'\n        className={ this.props.className }\n        placeholder={ this.props.placeholder || 'Type your location here.' }\n      />\n    );\n  }\n\n  componentWillMount() {\n    this._googlePredictions = [];\n    this._country = this.props.country || DEFAULT_COUNTRY;\n    this._noMatching = this.props.noMatching || NO_MATCHING;\n  }\n\n  componentDidMount() {\n    var input;\n    var config = {\n      minChars: 1,\n      keepListItems: false,\n      sort: function () { return 0; },\n      item: function (text, input) {\n        return Awesomplete.$.create('li', {\n          innerHTML: text.replace(\n            RegExp(Awesomplete.$.regExpEscape(input.trim()), 'gi'),\n            '<mark>$&</mark>'\n          ),\n          'aria-selected': 'false'\n        });\n      }\n    };\n\n    input = ReactDom.findDOMNode(this);\n    this._autocomplete = new Awesomplete(input, config);\n\n    input.addEventListener(\n      'awesomplete-selectcomplete',\n      this._handleAutocompleteSelect.bind(this)\n    );\n    input.addEventListener(\n      'keyup',\n      this._handleInputChange.bind(this)\n    );\n  }\n\n  updateCountry(country) {\n    this._country = country;\n  }\n\n  _handleInputChange(event) {\n    var value = this._getInputValue();\n    var updateAutocomplete = compose(\n      this._autocomplete.evaluate.bind(this._autocomplete),\n      (list) => this._autocomplete.list = list,\n      (list) => list.map((item) => item.description),\n      (results) => this._googlePredictions = results\n    );\n    var fail = compose(\n      updateAutocomplete,\n      (text) => [{ description: text }],\n      (text) => {\n        return this._noMatching.replace('{{value}}', text);\n      }\n    );\n    var navKeys = [38, 40, 13, 27];\n    var isItNavKey = navKeys.indexOf(event.keyCode) >= 0;\n\n    if (!isItNavKey) {\n      this._getPredictions(value).then(updateAutocomplete, fail);\n    }\n  }\n\n  _handleAutocompleteSelect() {\n    var value = this._getInputValue();\n    var find = (list) => {\n      let l = list.filter(item => item.description === value);\n\n      return l.length > 0 ? l[0] : false;\n    };\n    var validate = item => item && item.place_id ? item.place_id : false;\n    var getPlaceId = compose(validate, find);\n    var success = (location) => {\n      this.props.onLocationSet && this.props.onLocationSet({\n        description: value,\n        coords: {\n          lat: location.lat(),\n          lng: location.lng()\n        }\n      });\n    };\n\n    this._getCoordinates(getPlaceId(this._googlePredictions)).then(success);\n  }\n\n  _getInputValue() {\n    return ReactDom.findDOMNode(this).value;\n  }\n\n  _getPredictions(text) {\n    var service = (this.props.google || google).createAutocompleteService();\n    var isThereAnyText = !!text;\n\n    if (isThereAnyText) {\n      return new Promise((resolve, reject) => {\n        service.getPlacePredictions({\n          input: text,\n          componentRestrictions: { country: this._country },\n          types: ['(regions)']\n        }, (result) => {\n          if (result !== null) {\n            resolve(result);\n          } else {\n            reject(text);\n          }\n        });\n      });\n    }\n    return new Promise((resolve, reject) => {});\n  }\n\n  _getCoordinates(placeId) {\n    var geocoder = (this.props.google || google).createGeocoder();\n\n    return new Promise((resolve, reject) => {\n      geocoder.geocode({ placeId: placeId }, (results, status) => {\n        if (status === 'OK' && results && results.length > 0) {\n          resolve(results[0].geometry.location);\n        } else {\n          reject(false);\n        }\n      });\n    });\n  }\n\n};\n\nLocation.propTypes = {\n  onLocationSet: React.PropTypes.func,\n  className: React.PropTypes.string,\n  placeholder: React.PropTypes.string,\n  country: React.PropTypes.string,\n  noMatching: React.PropTypes.string,\n  google: React.PropTypes.object\n};\n"]}